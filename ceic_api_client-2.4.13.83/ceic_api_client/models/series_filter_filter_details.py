# coding: utf-8

"""
    CEIC API

    CEIC API v2 is a new generation RESTful API that provides an easy access to CEIC's analytical and time series information, including all metadata items and time point values. It includes powerful keyword and criteria search, as well as a data feed option – retrieving only the newest time points data, in order to feed user’s own database and compare the actual changes introduced. Supported output formats include XML, JSON and CSV.  API access is secured utilizing API keys and all data transfer encrypted via HTTPS. In order to use any of the API functions, users shall generate such a key. This can be done through user's profile menu under CDMNext. Users can have only one active API key. Generating a new key will invalidate the existing one. API keys have to be included with each HTTP request, either as an `Authorization` header or as `token` query parameter.  All dates for both input parameters and output attributes are in ISO 8601 format in order to avoid misinterpretation of numeric representations of dates and times, particularly when data are transferred between countries with different conventions for writing numeric dates and times.  <p style=\"color: red\">Security Notice: As of June 30, 2018 the CEIC API v2 will not be accessible by clients using SSL or TLS 1.0 security protocol</p>  <ul>         <li>             <a href='https://downloads-stage.ceicdata.com/python/documentation/CEIC%20Python%20SDK%20-%20Development%20Guide.html'>CEIC Python SDK - Development Guide</a>         </li>         <li>             <a href='https://downloads-stage.ceicdata.com/php/documentation/CEIC%20PHP%20SDK%20-%20Development%20Guide.html'>CEIC PHP SDK - Development Guide</a>         </li>         <li>             <a href='https://downloads-stage.ceicdata.com/javascript/documentation/CEIC%20JavaScript%20SDK%20-%20Development%20Guide.html'>CEIC JavaScript SDK - Development Guide</a>         </li>     <li>   <a href='https://downloads.ceicdata.com/api/documentation/api-release-notes.html'>Release Notes</a>   <span>             <a href=\"https://downloads.ceicdata.com/api/documentation/api-release-notes-rss.xml\">                 <img src=\"https://downloads.ceicdata.com/api/documentation/release-notes-files/rss-logo-rectangle-35x75.png\">             </a>         </span>     </li>  </ul>  <div>     <a href='https://api-status.ceicdata.com/'>Monitor CEIC API Status</a> </div>  # noqa: E501

    OpenAPI spec version: 2.4.5
    Contact: helpdesk@ceicdata.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SeriesFilterFilterDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'series': 'list[str]',
        'search': 'object'
    }

    attribute_map = {
        'series': 'series',
        'search': 'search'
    }

    def __init__(self, series=None, search=None):  # noqa: E501
        """SeriesFilterFilterDetails - a model defined in Swagger"""  # noqa: E501

        self._series = None
        self._search = None
        self.discriminator = None

        if series is not None:
            self.series = series
        if search is not None:
            self.search = search

    @property
    def series(self):
        """Gets the series of this SeriesFilterFilterDetails.  # noqa: E501

        List of series to get  # noqa: E501

        :return: The series of this SeriesFilterFilterDetails.  # noqa: E501
        :rtype: list[str]
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this SeriesFilterFilterDetails.

        List of series to get  # noqa: E501

        :param series: The series of this SeriesFilterFilterDetails.  # noqa: E501
        :type: list[str]
        """

        self._series = series

    @property
    def search(self):
        """Gets the search of this SeriesFilterFilterDetails.  # noqa: E501

        List of search filters  # noqa: E501

        :return: The search of this SeriesFilterFilterDetails.  # noqa: E501
        :rtype: object
        """
        return self._search

    @search.setter
    def search(self, search):
        """Sets the search of this SeriesFilterFilterDetails.

        List of search filters  # noqa: E501

        :param search: The search of this SeriesFilterFilterDetails.  # noqa: E501
        :type: object
        """

        self._search = search

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SeriesFilterFilterDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
